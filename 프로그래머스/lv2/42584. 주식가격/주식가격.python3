def solution(prices):
    """
    < Stack 사용하는 방법 >
    """
    ans = [i for i in range(len(prices)-1,-1,-1)] # 4,3,2,1,0
    stack = [0] # 조회할 idx 저장할 stack
    # 첫 번째 요소는 순회할 때마다 pop되서 계산됨
    # idx 0번 : 줄어들면 요소 갯수만큼 while에서 조회됨( 단, 안줄어들면 계속 stack에 삽입됨 )
    
    for i in range(1,len(prices)) : # 1,2,3,4
        while stack and prices[stack[-1]] > prices[i] : # 3번째 경우 -> prices[2] : 3 & prices[3] : 2
            # 다음 반복인 stack[1] 은 동일한 2이기 때문에 while문 안돎
            # 마지막인 prices[3] : 2  & prices[4] : 3
            k = stack.pop() # 2 # 3
            ans[k] = i - k # answer[2] = 3 - 2 = 1 # answer[3] = 4 - 3
        stack.append(i)
        
    
    """
    < Queue 사용하는 방법 >
    """
    from collections import deque
    q = deque(prices)
    ans = []
    while q :
        p = q.popleft()
        cnt = 0
        for price in q : # 앞에서부터 prices에 있는 값들
            cnt+=1
            if p > price : # 줄어든 경우
                break
        ans.append(cnt)
    return ans
