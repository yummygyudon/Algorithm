from math import sqrt
def checking(num) :
    if num < 2 :
        return False
    for i in range(2, int(sqrt(num))+1) : # 절반으로 줄이기
        if num%i == 0 :
            return False
    return True

def solution(numbers):
    from itertools import permutations
    posible_num = set()
    for i in range(1, len(numbers)+1):
        posible_num.update( set( map( int, map( ''.join,permutations(list(numbers), i) ) ) ) )
    
    pn = list(posible_num)
    # flag = max(pn)
    # check = [False,False]+ [True]*(flag+1)
    # for n in range(2, flag+1) :
    #     i = 2
    #     while n*i <=  flag :
    #         check[n*i] = False
    #         i += 1
    ans = 0
    for num in pn :
        if checking(num) :
            ans+=1
    return ans