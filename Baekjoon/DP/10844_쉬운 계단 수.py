N = int(input())

'''
0 을 임의로 1로 두면
1 은 0을 제외한 1~9 9개수

2: 9 + 9 -1 (첫째자리 0 제외) 무조건

1 : 1, 2, 3, 4, 5, 6, 7, 8, 9 = 9
2 : 10, 12, 23, 34, 45, 56, 67, 78, 89
        21, 32, 43, 54, 65, 76, 87, 98
    = 17

    맨 앞자리부터 1~9에서는 각 각 -1값과 +1값 2가지 올 수 있음
    단 9의 경우 : +1값은 0이 되서 계단 X ( 경우 1)
    단 0의 경우 : -1값은 9가 되서 계단 X ( 경우 2)
2 : 9 + (9-1)  = 17  1의 개수 +    
3 : 9 + (9-1) + (9-1) = 34
'''
# 까비 접근을 좀더 잘해볼걸...
# stair_num = [0]*101
# stair_num[1] = 9
# stair_num[2] = 17
# if N >= 3 :
#     for i in range(3, N+1):
#         stair_num[i] = stair_num[i-1] + (9*2-1)
#
# print(stair_num[N])

dp = [[0] * 10 for _ in range(N + 1)]  # 둘째 자리부터는 0일 경우까지 고려해야 하기 때문에 *10

# 1자리 수의 경우 시작
# [1], [2], [3], [4], [5], [6], [7], [8], [9]
for i in range(1, 10):
    dp[1][i] = 1

mod = 1000000000

for i in range(2, N + 1):
    for k in range(10):  # 맨 앞자리 제외 " 각 자릿수 "에 올 수 있는 0~9의 경우
        if k == 0:
            dp[i][k] = dp[i - 1][1]  # 1만 가능 (9 불가)
        elif k == 9:
            dp[i][k] = dp[i - 1][8]  # 8만 가능 (0 불가)
        else:
            dp[i][k] = dp[i - 1][k - 1] + dp[i - 1][k + 1]

print(sum(dp[N]) % mod)