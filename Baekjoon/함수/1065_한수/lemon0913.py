# level 6 - 함수
# 1065번  한수


# 어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 
# 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. 
# N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오. 

# 첫째 줄에 1,000보다 작거나 같은 자연수 N이 주어진다.
# 첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.



#한수인지 아닌지 판별한 뒤 한수의 개수를 구하는 함수 정의
def find_hansoo(num, N):
    for i in range(100, N+1):
        i1 = i%10 #i의 1의 자리 수
        i10 = int(i/10)%10 #i의 10의 자리 수
        i100 = int(i/100) #i의 100의 자리 수

        #i가 한수면 리스트에서 값을 0으로 바꾸기
        if (i1-i10) == (i10-i100):
            num[i] = 0 
    
    # 100 ~ N사이의 수 중에서 한수의 갯수 구하기 
    count = 0
    for i in range(100, N+1):
        if num[i] == 0:
            count += 1
    
    return (99+count)
    


if __name__ == "__main__":
    
    N = int(input())

    
    numbers = list(range(N+1)) 

    #1~99사이의 수는 무조건 한수이다. 세자리수에 대해서만 한수인지 아닌지 판단하면 된다.
    if(N<100):
        print(N)

    elif(100 <= N < 1000):
        print(find_hansoo(numbers, N))
    else: #N이 1000인 경우
        # 1000은 한수가 아니다. 따라서 1~1000사이의 한수의 갯수를 구하고 싶다면
        # 1000을 제외하고 1~999사이의 한수의 갯수를 구하면 된다
        print(find_hansoo(numbers, 999))

