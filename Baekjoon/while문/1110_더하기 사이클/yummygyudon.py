# 문제
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
#
# 출력
# 첫째 줄에 N의 사이클 길이를 출력한다.

# 풀이 1 (참고)
# 연산자를 잘 활용하는 문제라고 한다..
num = int(input())
n = num # while문 첫 싸이클에 들어갈 변수 설정
cycle = 0

# //연산자와 %연산자로 앞, 뒤 숫자 구분
while True:
    a = n//10 # 10으로 나눈 몫 -> 앞자리 숫자 _ 한자릿수일 경우 자연스레 0이 됨.
    b = n%10 # 10으로 나눈 나머지 ->뒷자리의 숫자가 옴
    k = (a+b)%10 # 두 수의 합값의 뒷자리 숫자
    n = (b*10)+k # 기존 뒷자리 수를 앞자리로 & 1의자리에 k

    cycle += 1
    if(n == num) :
        break
print(cycle)

#풀이 2 (My Own)
### 와...너무 힘들었어..
# 99 이하의 숫자만 취급하는 조건에 한해서만 가능한 코드
num = str(input())
n = num
i = 0
if len(num) == 1 : # 한 자리 숫자일 경우 대비
    a, b = 0, num # 0으로 대체
else :
    a, b = num[0], num[1]
while True :
    k = int(a) + int(b) # 각 자릿수 합
    if k >= 10 : #합이 만약 10이 넘으면
        k = str(k)[1] # 뒷자리 숫자만 가져오기
    else :
        k = str(k) #한자리면 그대로 사용
    n = f"{b}{k}" # (입력값의 뒷자리)(합의 뒷자리) _ex. 26 -> 68, 1 -> 11
    #두번째 사이클부터 계산이 맞게끔
    # 'bk'가 처음의 'ab'와 같은 역할을 수행해야하기 때문에
    a = b
    b = k
    i += 1
    if int(num) == int(n) :
        break
print(i)